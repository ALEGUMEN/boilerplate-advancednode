// /views/pug/chat.pug
html
  head
    title FCC Advanced Node and Express Chat
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1')
    link(rel='stylesheet', href='/public/style.css')
  body
    h1.border.center FCC Advanced Node and Express
    h2.center Socket.IO Chat Room

    .chat.center
      p Welcome, #{user.name || user.username}!
      p#num-users 0 users online
      .chat-box
        ul#messages
        form#form(action='')
          input#m(autocomplete='off')
          button Send
      a#logout(href='/logout') Logout

    // Socket.IO + cliente inline
    script(src="/socket.io/socket.io.js")
    script.
      // Conexión Socket.IO
      const socket = io();

      // Actualizar número de usuarios
      socket.on('user', data => {
        document.getElementById('num-users').textContent = `${data.currentUsers} users online`;
      });

      // Formulario de envío de mensajes
      const form = document.getElementById('form');
      const input = document.getElementById('m');
      const messages = document.getElementById('messages');

      form.addEventListener('submit', e => {
        e.preventDefault();
        if (input.value) {
          socket.emit('chat message', input.value);
          input.value = '';
        }
      });

      // Recibir mensajes
      socket.on('chat message', data => {
        const item = document.createElement('li');
        item.textContent = `${data.name}: ${data.message}`;
        messages.appendChild(item);
        window.scrollTo(0, document.body.scrollHeight);
      });
